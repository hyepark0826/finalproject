package com.kosta.finalproject.service;

import java.util.Optional;

import org.springframework.stereotype.Service;

import com.kosta.finalproject.dto.MemberDTO;
import com.kosta.finalproject.entity.MemberEntity;
import com.kosta.finalproject.repository.MemberRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class MemberService {
	private final MemberRepository memberRepository;
	
	public Long save(MemberDTO memberDTO) {
		
		//MemberEntity memberEntity = memberRepository.save(MemberEntity.toSaveEntity(memberDTO)); 						
		MemberEntity memberEntity = MemberEntity.toSaveEntity(memberDTO);
		Long savedId = memberRepository.save(memberEntity).getId();
		return savedId;
		
	}

	public MemberDTO login(MemberDTO memberDTO) {
		/**
		 * login.html에서 이메일, 비번을 받아오고
		 * DB 로부터 해당 이메일의 정보를 가져와서
		 * 입력받은 비번과 DB에서 조회한 비번의 일치여부를 판단하여
		 * 일치하면 로그인 성공, 일치하지 않으면 로그인 실패로 처리
		 */
		// return false;
	Optional<MemberEntity> optionalMemberEntity = memberRepository.findByMemberEmail(memberDTO.getMemberEmail());	
	if (optionalMemberEntity.isPresent()) {
			MemberEntity loginEntity = optionalMemberEntity.get();
			if (loginEntity.getMemberPassword().equals(memberDTO.getMemberPassword())) {
			return true;
			} else {
			return false;
			}
	}else {
		return false;
		}
	}

	}
